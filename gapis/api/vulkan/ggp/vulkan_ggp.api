// Copyright (C) 2019 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ----------------------------------------------------------------------------
// VK_GGP_stream_descriptor_surface
// ----------------------------------------------------------------------------

type VkFlags VkStreamDescriptorSurfaceCreateFlagsGGP
type u32 GgpStreamDescriptor

@extension("VK_GGP_stream_descriptor_surface")
class VkStreamDescriptorSurfaceCreateInfoGGP {
    VkStructureType                            sType
    const void*                                pNext
    VkStreamDescriptorSurfaceCreateFlagsGGP    flags
    GgpStreamDescriptor                        streamDescriptor
}

@extension("VK_GGP_stream_descriptor_surface")
@indirect("VkInstance")
cmd VkResult vkCreateStreamDescriptorSurfaceGGP(
    VkInstance                       instance,
    const VkStreamDescriptorSurfaceCreateInfoGGP* pCreateInfo,
    const VkAllocationCallbacks*     pAllocator,
    VkSurfaceKHR*                    pSurface) {
  read(pCreateInfo[0:1])
  surface := new!SurfaceObject()
  surface.Instance = instance
  surface.Type = SURFACE_TYPE_GGP
  // TODO: pAllocator

  handle := ?
  pSurface[0] = handle
  surface.VulkanHandle = handle
  Surfaces[handle] = surface

  return ?
}

@extension("VK_GGP_frame_token")
class VkPresentFrameTokenGGP {
  VkStructureType sType
  const void*                pNext
  u64 frameToken
}
